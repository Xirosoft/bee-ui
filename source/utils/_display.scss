@use '../internal' as *;


/*************************************
/* Display Property
*************************************/
/// Display property Variable
/// @param {Display Map} From internal/default.scss
///


@mixin display-property($props: $display-property) {
    @each $props-key, $props-val in $props {
        &-#{$props-key} {
            display: $props-val !important;
        }
    }
    @each $key, $val in $default-breakpoints {
        @each $props-key, $props-val in $props {
            &-#{$key}-#{$props-key} {
                @include mq(null, $key) {
                    display: $props-val !important;
                }
            }
        }
    }
}

.d {
    @include display-property($display-property);
}


/*************************************
/* Display Align Direction Property
*************************************/
/// Display Direction property Variable
/// @param {Display Align Direction Map} From internal/default.scss
///

@each $props-key, $props-val in $display-align-direction-property {
    .align-items-#{$props-key} {
        align-items: $props-val !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $display-align-direction-property {
        .align-items-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                align-items: $props-val !important;
            }
        }
    }
}

/*************************************
/* Display Self Direction Property
*************************************/
/// Display Self Direction property Variable
/// @param {Display Self Direction Map} From internal/default.scss
///

@each $props-key, $props-val in $display-self-direction-property {
    .align-self-#{$props-key} {
        align-self: $props-val !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $display-self-direction-property {
        .align-self-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                align-self: $props-val !important;
            }
        }
    }
}

/*************************************
/* Display Wrap Direction Property
*************************************/
/// Display Wrap Direction property Variable
/// @param {Display Self Direction Map} From internal/default.scss
///

@each $props-key, $props-val in $display-wrap-direction-property {
    .flex-#{$props-key} {
        flex: $props-val !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $display-wrap-direction-property {
        .flex-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                flex: $props-val !important;
            }
        }
    }
}

/*************************************
/* Display Align Content Direction Property
*************************************/
/// Display Align Content Direction property Variable
/// @param {Display Self Direction Map} From internal/default.scss
///

@each $props-key, $props-val in $display-direction-property {
    .align-content-#{$props-key} {
        align-content: $props-val !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $display-direction-property {
        .align-content-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                align-content: $props-val !important;
            }
        }
    }
}


/*************************************
/* Display Direction Justify Property
*************************************/
/// Display Direction Justify property Variable
/// @param {Display Direction Justify Map} From internal/default.scss
///

@each $key, $value in $display-direction-property {
    .justify-content-#{$key} {
        justify-content: $value !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $display-direction-property {
        .justify-content-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                justify-content: $props-val !important;
            }
        }
    }
}

/*************************************
/* Order Property
*************************************/
/// Order property Variable
/// @param {Display Order Property Map} From internal/default.scss
///

@each $props-key, $props-val in $order-property {
    .order-#{$props-key} {
        order: $props-val !important;
    }
}
@each $key, $val in $default-breakpoints {
    @each $props-key, $props-val in $order-property {
        .order-#{$key}-#{$props-key} {
            @include mq(null, $key) {
                order: $props-val !important;
            }
        }
    }
}
